import { createClient } from '@supabase/supabase-js';
import * as fs from 'fs';
import * as path from 'path';

// Cr√©ation du client Supabase
const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL!,
  process.env.SUPABASE_SERVICE_ROLE_KEY! // Utilisation de la cl√© service pour les op√©rations admin
);

async function setupDatabase() {
  try {
    console.log('üöÄ D√©but de la configuration de la base de donn√©es...');

    // Lecture du fichier SQL
    const sqlPath = path.join(__dirname, 'create_subscriptions_tables.sql');
    const sqlContent = fs.readFileSync(sqlPath, 'utf8');

    // Ex√©cution du script SQL
    const { error } = await supabase.rpc('exec_sql', {
      sql_query: sqlContent
    });

    if (error) throw error;

    console.log('‚úÖ Tables cr√©√©es avec succ√®s !');

    // V√©rification des tables
    const { data: plans, error: plansError } = await supabase
      .from('subscription_plans')
      .select('id, name, monthly_price');

    if (plansError) throw plansError;

    console.log('üìä Plans d\'abonnement cr√©√©s :', plans?.length || 0);
    console.log(plans);

  } catch (error) {
    console.error('‚ùå Erreur lors de la configuration :', error);
    process.exit(1);
  }
}

// Ex√©cution du script
setupDatabase(); 