import { supabase } from '../utils/supabase';

export interface AIPrompt {
  id?: string;
  user_id: string;
  prompt: string;
  response: string;
  platforms?: string[];
  tone?: string;
  content_type?: string;
  keywords?: string;
  usage_stats?: Record<string, any>;
  rating?: number;
  created_at?: string;
}

export interface AIPromptTemplate {
  id?: string;
  name: string;
  description?: string;
  template: string;
  category: string;
  is_public?: boolean;
  user_id?: string;
  created_at?: string;
}

// R√©cup√©rer l'historique des prompts pour un utilisateur
export async function getUserPromptHistory(userId: string, limit = 20) {
  try {
    const { data, error } = await supabase
      .from('ai_prompts')
      .select('*')
      .eq('user_id', userId)
      .order('created_at', { ascending: false })
      .limit(limit);
    
    if (error) throw error;
    
    return { data, error: null };
  } catch (error) {
    console.error('Erreur lors de la r√©cup√©ration de l\'historique des prompts:', error);
    return { data: null, error };
  }
}

// Sauvegarder un nouveau prompt et sa r√©ponse
export async function savePrompt(promptData: AIPrompt) {
  try {
    const { data, error } = await supabase
      .from('ai_prompts')
      .insert([promptData])
      .select();
    
    if (error) throw error;
    
    return { data: data?.[0] || null, error: null };
  } catch (error) {
    console.error('Erreur lors de l\'enregistrement du prompt:', error);
    return { data: null, error };
  }
}

// √âvaluer un prompt (donner une note)
export async function ratePrompt(promptId: string, rating: number) {
  try {
    const { data, error } = await supabase
      .from('ai_prompts')
      .update({ rating })
      .eq('id', promptId)
      .select();
    
    if (error) throw error;
    
    return { data: data?.[0] || null, error: null };
  } catch (error) {
    console.error(`Erreur lors de l'√©valuation du prompt ${promptId}:`, error);
    return { data: null, error };
  }
}

// R√©cup√©rer tous les mod√®les de prompts (templates)
export async function getPromptTemplates(category?: string) {
  try {
    let query = supabase
      .from('ai_prompt_templates')
      .select('*');
    
    if (category) {
      query = query.eq('category', category);
    }
    
    const { data, error } = await query.order('name');
    
    if (error) throw error;
    
    return { data, error: null };
  } catch (error) {
    console.error('Erreur lors de la r√©cup√©ration des mod√®les de prompts:', error);
    return { data: null, error };
  }
}

// Ajouter un nouveau mod√®le de prompt
export async function addPromptTemplate(template: AIPromptTemplate) {
  try {
    const { data, error } = await supabase
      .from('ai_prompt_templates')
      .insert([template])
      .select();
    
    if (error) throw error;
    
    return { data: data?.[0] || null, error: null };
  } catch (error) {
    console.error('Erreur lors de l\'ajout du mod√®le de prompt:', error);
    return { data: null, error };
  }
}

// Fonction pour g√©n√©rer du contenu avec l'assistant IA (simulation)
export function generateAIContent(
  prompt: string, 
  platforms: string[] = ['instagram'], 
  tone: string = 'professional',
  contentType: string = 'post',
  keywords: string = ''
) {
  // Simuler la g√©n√©ration de contenu selon les param√®tres
  // Dans une vraie impl√©mentation, cela appellerait une API comme OpenAI
  
  const contents: Record<string, string> = {};
  
  if (platforms.includes('instagram')) {
    contents['Instagram'] = tone === 'professional' 
      ? `‚ú® Innovation et excellence au service de votre quotidien ‚ú®\n\nD√©couvrez notre approche unique qui allie design contemporain et fonctionnalit√©. Chaque produit est con√ßu avec soin pour r√©pondre √† vos besoins sp√©cifiques.\n\n${keywords ? `#${keywords.split(',').map(k => k.trim()).join(' #')}` : '#Innovation #Excellence #Design'}`
      : tone === 'casual'
      ? `Hey ! üëã On a quelque chose de cool √† vous montrer ! üòç\n\nOn a travaill√© dur ces derniers mois et on est super excit√©s de partager √ßa avec vous. Swipez pour d√©couvrir notre derni√®re cr√©ation !\n\n${keywords ? `#${keywords.split(',').map(k => k.trim()).join(' #')}` : '#Nouveau #Cool #D√©couverte'}`
      : `üî• INCROYABLE NOUVEAUT√â ! üî•\n\nVous n'avez JAMAIS rien vu de tel ! Notre toute derni√®re innovation va R√âVOLUTIONNER votre fa√ßon de voir les choses ! √Ä d√©couvrir ABSOLUMENT ! üò±\n\n${keywords ? `#${keywords.split(',').map(k => k.trim()).join(' #')}` : '#Incroyable #R√©volution #MustHave'}`;
  }
  
  if (platforms.includes('linkedin')) {
    contents['LinkedIn'] = tone === 'professional' 
      ? `Nous sommes fiers d'annoncer le lancement de notre derni√®re innovation, fruit d'un travail collaboratif intensif et d'une recherche approfondie.\n\nCette avanc√©e repr√©sente parfaitement notre engagement continu envers l'excellence et la satisfaction client qui ont toujours √©t√© au c≈ìur de notre philosophie d'entreprise.\n\nN'h√©sitez pas √† me contacter pour plus d'informations sur cette initiative passionnante.\n\n${keywords ? `#${keywords.split(',').map(k => k.trim()).join(' #')}` : '#Innovation #Excellence #Leadership'}`
      : tone === 'casual'
      ? `Heureux de partager avec mon r√©seau notre derni√®re r√©alisation !\n\nApr√®s plusieurs mois de travail en √©quipe, nous avons enfin lanc√© ce projet qui nous tient √† c≈ìur. Un grand merci √† tous ceux qui ont contribu√© √† ce succ√®s.\n\nQu'en pensez-vous ? Vos retours sont les bienvenus !\n\n${keywords ? `#${keywords.split(',').map(k => k.trim()).join(' #')}` : '#Collaboration #Projet #Partage'}`
      : `üöÄ ANNONCE MAJEURE ! üöÄ\n\nJe suis EXTR√äMEMENT FIER de vous pr√©senter notre R√âVOLUTION dans le secteur ! Une innovation qui va TRANSFORMER votre fa√ßon de travailler !\n\nDemandez-moi comment en profiter d√®s MAINTENANT !\n\n${keywords ? `#${keywords.split(',').map(k => k.trim()).join(' #')}` : '#Disruption #Innovation #GameChanger'}`;
  }
  
  if (platforms.includes('facebook')) {
    contents['Facebook'] = tone === 'professional' 
      ? `Nous avons le plaisir de vous pr√©senter notre derni√®re nouveaut√©, con√ßue pour r√©pondre aux besoins exigeants de nos clients.\n\nApr√®s des mois de d√©veloppement et de tests rigoureux, ce produit incarne notre engagement envers la qualit√© et l'innovation.\n\nD√©couvrez-en plus sur notre site web ou contactez-nous directement pour une d√©monstration personnalis√©e.\n\n${keywords ? `#${keywords.split(',').map(k => k.trim()).join(' #')}` : '#Qualit√© #Innovation #Service'}`
      : tone === 'casual'
      ? `Hey tout le monde ! On est super contents de vous montrer ce sur quoi on travaille depuis des mois ! ü§©\n\nOn a mis tout notre c≈ìur dans ce projet et on esp√®re vraiment qu'il vous plaira autant qu'√† nous.\n\nN'h√©sitez pas √† partager votre avis dans les commentaires !\n\n${keywords ? `#${keywords.split(',').map(k => k.trim()).join(' #')}` : '#Nouveau #Excited #Feedback'}`
      : `üî• ATTENTION ANNONCE IMPORTANTE ! üî•\n\nNous venons de LANCER notre produit le plus INCROYABLE √† ce jour ! Vous ne voudrez pas manquer √ßa !\n\nCLIQUEZ sur le lien dans notre bio pour √™tre parmi les PREMIERS √† en profiter ! Places limit√©es !\n\n${keywords ? `#${keywords.split(',').map(k => k.trim()).join(' #')}` : '#NePasManquer #Exclusif #Limit√©'}`;
  }
  
  if (platforms.includes('twitter')) {
    contents['Twitter'] = tone === 'professional' 
      ? `Nous sommes ravis de vous pr√©senter notre derni√®re innovation, con√ßue pour optimiser votre productivit√© quotidienne. D√©couvrez comment sur notre site.\n\n${keywords ? `#${keywords.split(',').map(k => k.trim()).join(' #')}` : '#Innovation #Productivit√©'}`
      : tone === 'casual'
      ? `Devinez ce qu'on vient de lancer ? üëÄ Notre nouveau produit est enfin dispo ! On a h√¢te de savoir ce que vous en pensez !\n\n${keywords ? `#${keywords.split(',').map(k => k.trim()).join(' #')}` : '#Nouveau #Feedback'}`
      : `BOUM ! üí• Notre produit r√©volutionnaire vient de sortir et il va TOUT CHANGER ! Lien en bio ! RT appr√©ci√©s !\n\n${keywords ? `#${keywords.split(',').map(k => k.trim()).join(' #')}` : '#GameChanger #MustHave'}`;
  }
  
  return {
    response: "Voici le contenu g√©n√©r√© selon vos crit√®res. N'h√©sitez pas √† me demander des ajustements si n√©cessaire !",
    contents: Object.entries(contents).map(([platform, content]) => ({
      id: `${platform.toLowerCase()}-${Date.now()}`,
      platform,
      content
    }))
  };
} 